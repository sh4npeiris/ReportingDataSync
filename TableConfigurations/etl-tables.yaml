# ---------------------------------------------------------------------------
# Example 1: Basic Incremental Load
# This is the most common use case. It pulls new records from a table
# based on a timestamp column.
# ---------------------------------------------------------------------------
- SourceQuery: >
    SELECT UserId, ProfileId, FirstName, LastName, DateCreated, LastUpdated 
    FROM [User].[Profile] 
    WHERE LastUpdated > @lastRunDate
  TargetTable: "[User].[Profile]"
  IncrementalColumn: "LastUpdated"
  PrimaryKeyColumns: ["UserId"]

# ---------------------------------------------------------------------------
# Example 2: Full Load (Truncate and Reload)
# Use this for dimension tables or smaller tables that you want to completely
# refresh on every run. The IncrementalColumn is left empty.
# ---------------------------------------------------------------------------
- SourceQuery: >
    SELECT ProductId, ProductName, Category, UnitPrice FROM [Catalog].[Product]
  TargetTable: "[Catalog].[Product]"
  IncrementalColumn: ""
  PrimaryKeyColumns: ["ProductId"]

# ---------------------------------------------------------------------------
# Example 3: Incremental Load with a Composite Primary Key
# This handles linking tables or tables where uniqueness is defined by
# multiple columns.
# ---------------------------------------------------------------------------
- SourceQuery: >
    SELECT * FROM [Sales].[OrderDetails] WHERE DateAdded > @lastRunDate
  TargetTable: "[Sales].[OrderDetails]"
  IncrementalColumn: "DateAdded"
  PrimaryKeyColumns: ["OrderId", "ProductId"]

# ---------------------------------------------------------------------------
# Example 4: Incremental Column from a JOINed Table
# This is for cases where the timestamp you need to filter on exists in a
# related table, but the columns you want to select are from the main table.
# The `IncrementalColumn` uses the table alias.
# ---------------------------------------------------------------------------
- SourceQuery: >
    SELECT s.SubscriptionId, s.UserId, s.PlanType 
    FROM [Subscription].[Record] s
    INNER JOIN [User].[Profile] u ON s.UserId = u.UserId
    WHERE u.LastUpdated > @lastRunDate
  TargetTable: "[Subscription].[Record]"
  IncrementalColumn: "u.LastUpdated"
  PrimaryKeyColumns: ["SubscriptionId"]

# ---------------------------------------------------------------------------
# Example 5: De-duplicating Source Data with GROUP BY
# This handles data quality issues in the source where duplicate records
# might exist. It groups by the primary key and takes the most recent
# values for other columns, ensuring the data is clean before the merge.
# ---------------------------------------------------------------------------
- SourceQuery: >
    SELECT
        LoginId,
        UserId,
        LoginTimestamp,
        MAX(IpAddress) AS IpAddress,
        MAX(ClientVersion) AS ClientVersion
    FROM [Security].[LoginHistory]
    WHERE LoginTimestamp > @lastRunDate
    GROUP BY
        LoginId,
        UserId,
        LoginTimestamp
  TargetTable: "[Security].[LoginHistory]"
  IncrementalColumn: "LoginTimestamp"
  PrimaryKeyColumns: ["LoginId", "UserId", "LoginTimestamp"]